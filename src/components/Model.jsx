/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Optimized for performance
*/

import React, { useMemo } from 'react';
import { useGLTF } from '@react-three/drei';

// Memoize the model component to prevent unnecessary re-renders
export const Model = React.memo((props) => {
  const { nodes } = useGLTF('/logo1.gltf');
  
  // Adjusted scale to better fit the scene
  const scale = useMemo(() => [10, 10, 10], []);
  
  // Memoize meshes to prevent recreation on every render
  const meshes = useMemo(() => [
    {
      geometry: nodes.mesh_0.geometry,
      material: nodes.mesh_0.material
    },
    {
      geometry: nodes.mesh_1.geometry,
      material: nodes.mesh_1.material
    }
  ], [nodes]);

  return (
    <group scale={scale} {...props} dispose={null}>
      {meshes.map((mesh, index) => (
        <mesh
          key={index}
          castShadow
          receiveShadow
          geometry={mesh.geometry}
          material={mesh.material}
        />
      ))}
    </group>
  );
});

// Preload the GLTF model for better performance
useGLTF.preload('/logo1.gltf');