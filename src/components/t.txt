

flip cardRefs
"use client";
import { useRef, useEffect } from "react";
import gsap from "gsap";
import { ScrollTrigger } from "gsap/ScrollTrigger";
import { MotionPathPlugin } from "gsap/MotionPathPlugin";

export default function Card() {
  const cardref = useRef([]);

  useEffect(() => {
    gsap.registerPlugin(ScrollTrigger, MotionPathPlugin);

    cardref.current.forEach((card, index) => {
      gsap.set(card, {x: index * -1000, opacity: 1 });

      gsap.to(card, {
        motionPath: {
          path: [
            { x: index+1 * -100, y: 0 },
            { x: 0, y: 20 },
            { x: 100, y: 35 },
            { x: 200, y: 50 },
            { x: 300, y: 65 },
            { x: 400, y: 80 },
            { x: 500, y: 95 },
            { x: 600, y: 120 },
            { x: 700, y: 95 },
            { x: 800, y: 80 },
            { x: 900, y: 65 },
            { x: 1000, y: 50 },
            { x: 1100, y: 30 },
            { x: 1200, y: 25 },
            { x: 1300, y:20 },
            { x: 1400, y: 15 },
            { x: 1500, y: 10},
            { x: 1600, y: 0},
            { x: 3900, y: -5 } 
          ],

          curviness: 1.5,
          autoRotate: false,
        },
        opacity: 1,
        duration: 5,
        delay: index * 0.5,
        ease: "power1.inOut",
        scrollTrigger: {
          trigger: card,
          start: "top center",
          end: "bottom center",
          scrub: 3,
          markers: true,
        },
      });
    });
  }, []);

  return (
    <div className="relative overflow-hidden h-[800px] w-full">
      {Array.from({ length: 6 }).map((_, i) => (
        <div
          key={i}
          ref={(el) => {
            if (el) cardref.current[i] = el;
          }}
          className="border w-80 h-100 bg-white absolute top-40"
        ></div>
      ))}
    </div>
  );
}




"use client";
import { useRef, useEffect } from "react";
import gsap from "gsap";
import { ScrollTrigger } from "gsap/ScrollTrigger";
import { MotionPathPlugin } from "gsap/MotionPathPlugin";

export default function CardAnimation() {
  const cardRefs = useRef([]);

  useEffect(() => {
    gsap.registerPlugin(ScrollTrigger, MotionPathPlugin);

    cardRefs.current.forEach((card, index) => {
      if (!card) return;

      gsap.set(card, { x: (index + 1) * -900,y: (index+1 % 2 === 0 ? -100 : 0), opacity: 1 });

      const tl = gsap.timeline({
        scrollTrigger: {
          trigger: card,
          start: "top center",
          end: "bottom center",
          scrub: 3,
          markers: true,
          pin: false,
        },
      });

      tl.to(card, {
        x: 200 + index * 250, 
        y: index % 2 === 0 ? 100 : -100,
        duration: 2,
        ease: "power2.out",
      });

     
      tl.to(card, {
        x: 2500,
        y: index % 2 === 0 ? -250 : 250,
        opacity: 1,
        duration: 2,
        ease: "power2.in",
      });
    });
  }, []);

  return (
    <div className="relative overflow-hidden h-[800px] w-full">
      {Array.from({ length: 6 }).map((_, i) => (
        <div
          key={i}
          ref={(el) => {
            if (el) cardRefs.current[i] = el;
          }}
          className="border w-80 h-100 bg-white absolute"
        ></div>
      ))}
    </div>
  );
}



start from top like top of web and goest tot his component
"use client";
import gsap from "gsap";
import { ScrollTrigger } from "gsap/ScrollTrigger";
import Image from "next/image";
import React, { useEffect, useRef } from "react";

const Section6 = () => {
  gsap.registerPlugin(ScrollTrigger);

  useEffect(() => {
    const imgs = document.querySelectorAll(".card img");
    const cards = document.querySelectorAll(".card");

    const cardSticky = document.querySelectorAll(".card_sticky");
    const stickytitle = document.getElementById("sticky");

    
    cardSticky.forEach((card, index) => {
      gsap.to(stickytitle, {
        scrollTrigger: {
          trigger: stickytitle,
          start:  window.innerWidth < 640 ? "top top-=5" : "top top+=100",
          end: `%=20%`,
          pin: true,
          pinSpacing: false,
          scrub: true,
        },
        y: index * 50,
        zIndex: index + 1,
      });

      gsap.to(card, {
        scrollTrigger: {
          trigger: card,
          start: "top top+=100",
          end: `%=20%`,
          pin: true,
          pinSpacing: false,
          scrub: true,
        },
        y: index * 50,
        rotation: index % 2 === 0 ? -15 : 15,
        zIndex: index + 1,
      });
    });
    
    cards.forEach((card, index) => {
      const img = imgs[index];
      
      if (index % 2 === 0) {
        const handleMouseEnter = () => {
          gsap.to(img, { opacity: 1, scale: 1.2, rotate: 10, y: -20, x:-10 });
          if (card) {
            gsap.to(card, {
              backgroundColor: "rgb(24, 4, 181)",
              borderColor: "black",
              color: "white",
              rotate: 5,
            });
          }
        };
        const handleMouseLeave = () => {
          gsap.to(img, { scale: 1, opacity: 0, rotate: 0, x:0 });
          if (card) {
            gsap.to(card, {
              backgroundColor: "rgb(238,228,210)",
              borderColor: "black",
              color: "black",
              rotate: 4,
            });
          }

        };
        card.addEventListener("mouseenter", handleMouseEnter);
        card.addEventListener("mouseleave", handleMouseLeave);

        return () => {
          card.removeEventListener("mouseenter", handleMouseEnter);
          card.removeEventListener("mouseleave", handleMouseLeave);
        };
      }else {
        const handleMouseEnter = () => {
          gsap.to(img, { opacity: 1, scale: 1.2, rotate: -10, y: -20 , x:-10});
          if (card) {
            gsap.to(card, {
              backgroundColor: "rgb(222, 31, 98)",
              borderColor: "black",
              color: "white",
              rotate: -5,
            });
          }
        };
        const handleMouseLeave = () => {
          gsap.to(img, { scale: 1, opacity: 0, rotate: 0,x: 0 });
          if (card) {
            gsap.to(card, {
              backgroundColor: "rgb(238,228,210)",
              borderColor: "black",
              color: "black",
              rotate: -4,
            });
          }
        };

        card.addEventListener("mouseenter", handleMouseEnter);
        card.addEventListener("mouseleave", handleMouseLeave);

        return () => {
          card.removeEventListener("mouseenter", handleMouseEnter);
          card.removeEventListener("mouseleave", handleMouseLeave);
        };
      }
    });
  }, []);
  return (
    <>
      <div className="relative w-full pt-[10%] overflow-hidden bg-[rgb(238,228,210)]">
        <div className="flex flex-col  sm:flex-row md:flex-row xl:flex-row  lg:flex-row  gap-[2%] justify-between">
          <div className="border  w-[35%] h-20 m-[4%]">
            <h1
              id="sticky"
              className="z-100 p-4 pt-0 pb-0 mt-6 text-3xl sm:text-1xl 2xl:text-7xl md:text-4xl lg:text-6xl font-bold text-black"
            >
              Our Services
            </h1>
          </div>
          <div className="flex-column h-[100%]  w-[75%] m-[4%] text-black">
            <div className="card flex-grow-1 card_sticky border-solid border-[1px] bg-[rgb(238,228,210)] border-black rounded-lg m-6 w-[95%] h-[50%] ">
              <div className="flex justify-between">
                <div className="w-[100%]">
                  <h6 className="p-6 pb-1">01</h6>
                  <h1 className="pt-0 p-6 text-2xl sm:text-1xl 2xl:text-5xl md:text-2xl lg:text-3xl font-medium">
                    VOICE SUPPORT
                  </h1>
                </div>
                <div className="w-[60%]">
                  <Image
                    src="/images/headphones.svg"
                    alt="headphones"
                    width={150}
                    height={150}
                    className="-mt-[20%] will-change-transform opacity-0"
                  />
                </div>
              </div>
              <p className="p-6 pt-5 pb-3 text-justify text-sm sm:text-base md:text-lg lg:text-1xl xl:text-1xl 2xl:text-4xl">
                Help your clients understand their problems and provide
                effective solutions. problems and provide effective solutions.
              </p>
            </div>

            <div className="card flex-grow-1 card_sticky border-solid border-[1px] bg-[rgb(238,228,210)] border-black rounded-lg m-6 w-[95%] h-[50%]">
              <div className="flex justify-between">
                <div className="w-[100%]">
                  <h6 className="p-6 pb-1">02</h6>
                  <h1 className="pt-0 p-6 text-2xl sm:text-1xl 2xl:text-5xl md:text-2xl lg:text-3xl font-medium">
                    CHAT SUPPORT
                  </h1>
                </div>
                <div className="w-[60%]">
                  <Image
                    src="/images/message.svg"
                    alt="headphones"
                    width={130}
                    height={130}
                    className="mt-[15%] will-change-transform opacity-0"
                  />
                </div>
              </div>
              <p className="p-6 pb-3 pt-0 text-justify text-sm sm:text-base md:text-lg lg:text-1xl xl:text-1xl 2xl:text-4xl">
                Simplify complaint resolution, boost customer support, generate
                leads , and enhance sales through our live chat assistance.
              </p>
            </div>

            <div className="card flex-grow-1 card_sticky border-solid border-[1px] bg-[rgb(238,228,210)] border-black rounded-lg m-6 w-[95%] h-[50%]">
              <div className="flex justify-between">
                <div className="w-[100%]">
                  <h6 className="p-6 pb-1">03</h6>
                  <h1 className="pt-0 pb-0 p-6 text-2xl sm:text-1xl 2xl:text-5xl md:text-2xl lg:text-3xl font-medium">
                    EMAIL & TICKETING
                  </h1>
                </div>
                <div className="w-[60%]">
                  <Image
                    src="/images/sms.svg"
                    alt="headphones"
                    width={100}
                    height={100}
                    className="mt-[15%] ml-[15%] will-change-transform opacity-0"
                  />
                </div>
              </div>
              <p className="p-6 pb-3 pt-0 text-justify text-sm sm:text-base md:text-lg lg:text-1xl xl:text-1xl 2xl:text-4xl">
                Help your clients understand their problems and provide
                effective solutions. problems and provide effective solutions.
              </p>
            </div>

            <div className="card flex-grow-1 card_sticky border-solid border-[1px] bg-[rgb(238,228,210)] border-black rounded-lg m-6 w-[95%] h-[50%]">
              <div className="flex justify-between">
                <div className="w-[100%]">
                  <h6 className="p-6 pb-1">04</h6>
                  <h1 className="pt-0 p-6 text-2xl sm:text-1xl 2xl:text-5xl md:text-2xl lg:text-3xl font-medium">
                    TECHNICAL SUPPORT
                  </h1>
                </div>
                <div className="w-[60%]">
                  <Image
                    src="/images/gear2.svg"
                    alt="headphones"
                    width={120}
                    height={120}
                    className="mt-[2%] ml-[15%] will-change-transform opacity-0"
                  />
                </div>
              </div>
              <p className="p-6 pb-3 pt-5 text-justify text-sm sm:text-base md:text-lg lg:text-1xl xl:text-1xl 2xl:text-4xl">
                Our top tier technical expertise in BPO outsourcing helps you
                tackle tough problems, improve efficiency and expand customer
                base.
              </p>
            </div>

            <div className="card flex-grow-1 card_sticky border-solid border-[1px] bg-[rgb(238,228,210)] border-black rounded-lg m-6 w-[95%] h-[50%]">
              <div className="flex justify-between">
                <div className="w-[100%]">
                  <h6 className="p-6 pb-1">05</h6>
                  <h1 className="pt-0 pb-0 p-6 text-2xl sm:text-1xl 2xl:text-5xl md:text-2xl lg:text-3xl font-medium">
                    LEAD GENERATION
                  </h1>
                </div>
                <div className="w-[60%]">
                  <Image
                    src="/images/dollar.avif"
                    alt="headphones"
                    width={100}
                    height={100}
                    className="mt-[1%] ml-[15%] will-change-transform opacity-0"
                  />
                </div>
              </div>
              <p className="p-6 pb-3 pt-0 text-justify text-sm sm:text-base md:text-lg lg:text-1xl xl:text-1xl 2xl:text-4xl">
                Drive business growth by expanding your customer base through
                targeted strategies that effectively connect you with
                potentional clients, unloacking new opportunities for success.
              </p>
            </div>
          </div>
        </div>
      </div>
    </>
  );
};

export default Section6;
